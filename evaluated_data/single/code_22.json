{
    "input": "<fim_prefix>def get_disc_loss(real_content, fake_content, disc_content, adversarial_criterion):\n    disc_fake_content_hat = disc_content(fake_content.detach())\n    disc_fake_content_loss = adversarial_criterion(disc_fake_content_hat, torch.zeros_like(disc_fake_content_hat))\n<fim_suffix>\n    disc_real_content_loss = adversarial_criterion(disc_real_content_hat, torch.ones_like(disc_real_content_hat))\n    return (disc_fake_content_loss + disc_real_content_loss) / 2<fim_middle>",
    "gt_fim_middle": "    disc_real_content_hat = disc_content(real_content)",
    "output": "<fim_prefix>def get_disc_loss(real_content, fake_content, disc_content, adversarial_criterion):\n    disc_fake_content_hat = disc_content(fake_content.detach())\n    disc_fake_content_loss = adversarial_criterion(disc_fake_content_hat, torch.zeros_like(disc_fake_content_hat))\n<fim_suffix>\n    disc_real_content_loss = adversarial_criterion(disc_real_content_hat, torch.ones_like(disc_real_content_hat))\n    return (disc_fake_content_loss + disc_real_content_loss) / 2<fim_middle>    disc_real_content_hat = disc_content(real_content.detach())<|endoftext|>",
    "predicted_fim_middle": "    disc_real_content_hat = disc_content(real_content.detach())"
}